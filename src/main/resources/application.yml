spring:
  application:
    name: weather-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  cache:
    type: redis
    redis:
      time-to-live: ${CACHE_TTL:1800s} # 30 minutes default
      cache-null-values: false

# Weather API Configuration
# The actual API key will be loaded from application-local.yml
weather:
  openweathermap:
    api-key: ${WEATHER_OPENWEATHERMAP_API_KEY:}
    base-url: ${WEATHER_OPENWEATHERMAP_BASE_URL:https://api.openweathermap.org/data/2.5}
    units: ${WEATHER_OPENWEATHERMAP_UNITS:metric}
    language: ${WEATHER_OPENWEATHERMAP_LANGUAGE:en}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key-that-is-at-least-32-characters-long}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.lplemos.weather_service: DEBUG
    org.springframework.r2dbc: DEBUG
    org.flywaydb: DEBUG
    org.springframework.boot.autoconfigure.flyway: DEBUG
    # HTTP Client logging - shows all requests and responses
    org.springframework.web.reactive.function.client: DEBUG
    reactor.netty.http.client: DEBUG
    # WebClient wire logging - shows the actual HTTP wire
    org.springframework.web.reactive.function.client.ExchangeFilterFunctions: DEBUG 