spring:
  application:
    name: weather-service-testcontainers
  
  # R2DBC configuration (will be overridden by Testcontainers)
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/weatherdb
    username: postgres
    password: password
  
  # Redis configuration (will be overridden by Testcontainers)
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
  
  # Flyway configuration (will be overridden by Testcontainers)
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    url: jdbc:postgresql://localhost:5432/weatherdb
    user: postgres
    password: password
  
  # JPA configuration for Flyway
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

# Weather API configuration for tests
weather:
  openweathermap:
    api-key: test-api-key
    base-url: https://api.openweathermap.org/data/2.5
    timeout: 5000

# JWT configuration for tests
jwt:
  secret: testSecretKeyForJwtTokenGenerationAndValidation123456789
  expiration: 86400000 # 24 hours in milliseconds

# Logging configuration for tests
logging:
  level:
    com.lplemos.weather_service: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.data.redis: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.testcontainers: DEBUG
    com.github.dockerjava: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for tests
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Server configuration for tests
server:
  port: 0 # Random port for tests

# Testcontainers configuration
testcontainers:
  reuse:
    enable: true # Reuse containers between test runs for faster execution 